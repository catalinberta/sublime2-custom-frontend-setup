{
  /*
    IMPORTANT:
    Do NOT edit the default WhoCalled settings. Your changes will be lost every time WhoCalled is updated.
    ALWAYS edit the user WhoCalled settings by selecting Preferences->Package Settings->WhoCalled->Settings - User.
    Note that individual settings you include in your user settings will completely replace the corresponding
    default setting, so you must provide that setting in its entirety.
  */

  "settings":
  {
    // Ignore when files were last changed and always force indexing.
    "always_force_indexing": false,

    // Ignore selected project folders and alwyas index all.
    "always_index_all_folders": false
  },

  /*
    Allowed syntaxes for indexing. Adding new file extensions and regular expressions may or may not work.
    All regular expressions must be complete and working as-is or else the function will not be indexed.

    Legend:
      "def" = Regular expression for function definitions.
      "call" = Regular expression for function calls.
      "uni" = Regular expression for both functions definitions and function calls.
  */
  "syntaxes":
  {
    // LUA
    "lua":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // PHP
    "php":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // PHP include file
    "inc":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // PHTML (eg. Magento)
    "phtml":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // Python
    "py":
    {
      "def": "(?<=def\\s)\\b\\w+\\b",
      "call": "(?<!def\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // Ruby
    "rb":
    {
      "def": "(?<=def\\s)\\b\\w+\\b",
      "call": "(?<!def\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // Scala
    "scala":
    {
      "def": "(?<=def\\s)\\b\\w+\\b",
      "call": "(?<!def\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // JavaScript
    "js":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // Drupal module file
    "module":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // Drupal unit test file
    "test":
    {
      "def": "(?<=function\\s)\\b\\w+\\b",
      "call": "(?<!function\\s)\\b\\w+\\b(?=\\()",
      "uni": "\\b\\w+\\b(?=\\()"
    },
    // JAVA
    "java":
    {
      "def": "(?<=\\b.\\b)(?<!new\\s)(?<!\\.)\\b\\w+\\b((?=\\(.+\\{)|(?=\\(.+\\n.+\\{))|(?<=class\\s)\\w+",
      "call": "\\b\\w+\\b(?=\\()(?!.+\\{)",
      "uni": "\\b\\w+\\b(?=\\()|(?<=class\\s)\\w+"
    },
    // C#
    "cs":
    {
      "def": "(?<=\\b.\\b)(?<!new\\s)(?<!\\.)\\b\\w+\\b((?=\\(.+\\{)|(?=\\(.+\\n.+\\{))|(?<=class\\s)\\w+",
      "call": "\\b\\w+\\b(?=\\()(?!.+\\{)",
      "uni": "\\b\\w+\\b(?=\\()|(?<=class\\s)\\w+"
    },
    // C++
    "cpp":
    {
      "def": "\\b\\w+\\b((?=\\()|(?=\\s\\())((?=.+\\{)|(?=.+\\n\\{))",
      "call": "\\b\\w+\\b((?=\\()|(?=\\s\\())((?!.+\\{)(?!.+\\n\\{))",
      "uni": "\\b\\w+\\b((?=\\()|(?=\\s\\())"
    },
    // C
    "c":
    {
      "def": "\\b\\w+\\b((?=\\()|(?=\\s\\())((?=.+\\{)|(?=.+\\n\\{))",
      "call": "\\b\\w+\\b((?=\\()|(?=\\s\\())((?!.+\\{)(?!.+\\n\\{))",
      "uni": "\\b\\w+\\b((?=\\()|(?=\\s\\())"
    },
    // XSL
    "xsl":
    {
      "def": "((?<=xsl:template name=\").+(?=\"))|((?<=xsl:template match=\").+(?=\"\\s))|((?<=xsl:template match=\").+(?=\">))",
      "call": "((?<=xsl:call-template name=\").+(?=\"))|((?<=xsl:apply-templates select=\").+(?=\"\\s))|((?<=xsl:apply-templates select=\").+(?=.+/>))",
      "uni": "(((?<=xsl:template name=\").+(?=\"))|((?<=xsl:template match=\").+(?=\"\\s))|((?<=xsl:template match=\").+(?=\">)))|(((?<=xsl:call-template name=\").+(?=\"))|((?<=xsl:apply-templates select=\").+(?=\"\\s))|((?<=xsl:apply-templates select=\").+(?=/>)))"
    }
  }
}